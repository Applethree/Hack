#include <stdio.h>
#include <string.h>
#define N 256

int charHash[N] = {0};
void initCharHash(const char *s)
{
      while(*s)
      {
            charHash[*s]++;
            s++;
      }
}
char findFirstOnceChar(const char *s)
{
      while(*s)
      {
            if(charHash[*s] == 1)
            {
                  return *s;
            }
            s++;
      }
      return 0;
}
int main(void)
{
      char *str = "abbca";
      initCharHash(str);
      printf("%c\n",findFirstOnceChar(str));
      return 0;
}




／／better
char FirstNotRepeatingChar(char* pString)
{
      if(pString == NULL)
            return '\0';
 
      const int tableSize = 256;
      unsigned int hashTable[tableSize];
      for(unsigned int i = 0; i < tableSize; ++ i)
            hashTable[i] = 0;
 
      char* pHashKey = pString;
      while(*(pHashKey) != '\0')
            hashTable[*(pHashKey++)] ++;
 
      pHashKey = pString;
      while(*pHashKey != '\0')
      {
            if(hashTable[*pHashKey] == 1)
                  return *pHashKey;
            pHashKey++;
      }
      return '\0';
}
